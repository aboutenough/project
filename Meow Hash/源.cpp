#include "meow_hash_x64_aesni.h"
#include<iostream>
using namespace std;
string index = "0123456789ABCDEF";

string uint_to_str(uint8_t* num, string s = "") {
    for (int i = 0; i < 16; i++) {
        s += index[(num[i]) / 16];
        s += index[(num[i]) % 16];
    }
    return  s;
}

string str_Hash(meow_u128 Hash)
{
    uint8_t out[16];
    *(uint32_t*)&out = (uint32_t)MeowU32From(Hash, 0);
    *(uint32_t*)&out[4] = (uint32_t)MeowU32From(Hash, 1);
    *(uint32_t*)&out[8] = (uint32_t)MeowU32From(Hash, 2);
    *(uint32_t*)&out[12] = (uint32_t)MeowU32From(Hash, 3);
    /*for (int i = 0; i < 16; i++)
        printf("%02X", out[i]);*/
    return uint_to_str(out);
}



static void dump_buf(uint8_t* buf, uint32_t len)
{
    int i;
    printf("buf:");

    for (i = 0; i < len; i++) {
        printf("%s%02X%s", i % 16 == 0 ? "\r\n\t" : " ",
            buf[i],
            i == len - 1 ? "\r\n" : "");
    }
}

uint8_t key[128]
{ 0xAA, 0x69, 0x4F, 0xB6, 0x10, 0x39, 0xBF, 0x2C, 0x7E, 0x2D, 0x74, 0x3D, 0xC1, 0xBB, 0x2E, 0x19, 0xA9, 0x70, 0x70, 0xA9, 0x70, 0xF2, 0xA9, 0xC1, 0xA9, 0x70, 0x01, 0x72, 0xF2, 0x01, 0x95, 0xA9, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x63, 0xE4, 0xE3, 0x70, 0x97, 0x07, 0x93, 0xD3, 0xAC, 0x54, 0x35, 0x00, 0xBA, 0x51, 0xDC, 0x9D, 0x09, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0xD0, 0x63, 0x63, 0xB7, 0x63, 0x63, 0xB7, 0x63, 0x63, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };


void rand_key(uint8_t* key)
{
 
    for (int i = 0; i < 128; i++)
    {
        key[i] = rand() % 255;
    }
}



int main()
{
    srand((int)time(0));
    cout << "begin" << endl;
    char Buffer[] = "Junyu Zhang202000460031";
    string value = "7364755f6373745f3230323230363130";     //sdu_cst_20220610   
    while (1)
    {
        int r = rand() % 128;
        key[r] +=1;
        meow_u128 Hash = MeowHash(key, sizeof(Buffer) - 1, Buffer);
        if (str_Hash(Hash).compare(value) == 0) {
            cout << "success" << endl;
            dump_buf(key, 128);
            break;
        }
    }
}
